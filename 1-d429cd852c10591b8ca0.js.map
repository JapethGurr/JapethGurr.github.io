{"version":3,"sources":["webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/SidebarMenu/SidebarMenu.tsx","webpack:///./src/components/Layout.tsx","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/HeaderMenu/HeaderMenu.tsx","webpack:///./src/store.ts","webpack:///./.cache/public-page-renderer-prod.js"],"names":["__webpack_require__","r","__webpack_exports__","d","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","a","_wait_for_route_change__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_4__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_4___default","_parse_path__WEBPACK_IMPORTED_MODULE_5__","React","createContext","props","createElement","Consumer","staticQueryData","data","query","render","children","Error","propTypes","PropTypes","object","string","isRequired","func","connect","state","visible","isSidebarVisible","_ref","items","pathname","Link","isActive","item","exact","path","startsWith","activeItem","find","react","Sidebar","as","Menu","animation","width","icon","vertical","inverted","map","active","Item","to","key","Icon","name","menuItems","Layout","location","isHome","es","store","Pushable","Segment","components_SidebarMenu_SidebarMenu","Pusher","style","minHeight","HeaderMenu","paddingBottom","className","Container","textAlign","withLayout","WrappedComponent","_React$Component","WithLayout","apply","this","arguments","inheritsLoose_default","prototype","Layout_Layout","m","module","exports","require","default","dispatch","react__WEBPACK_IMPORTED_MODULE_3__","semantic_ui_react__WEBPACK_IMPORTED_MODULE_6__","semantic_ui_react__WEBPACK_IMPORTED_MODULE_7__","size","pointing","secondary","onClick","toggleSidebar","semantic_ui_react__WEBPACK_IMPORTED_MODULE_8__","type","createStore","action","Object","assign","devToolsEnhancer","ProdPageRenderer","pageResources","loader","getResourcesForPathnameSync","InternalPageRenderer","json","shape"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,4BAAAE,IAAAJ,EAAAG,EAAAD,EAAA,uCAAAG,IAAAL,EAAAG,EAAAD,EAAA,gCAAAI,IAAA,IAAAC,EAAAP,EAAA,GAAAQ,EAAAR,EAAAS,EAAAF,GAAAG,EAAAV,EAAA,GAAAW,EAAAX,EAAAS,EAAAC,GAAAE,EAAAZ,EAAA,KAAAa,EAAAb,EAAAS,EAAAG,GAAAZ,EAAAG,EAAAD,EAAA,yBAAAW,EAAAC,IAAAd,EAAAG,EAAAD,EAAA,+BAAAU,EAAA,aAAAZ,EAAAG,EAAAD,EAAA,6BAAAU,EAAA,WAAAZ,EAAAG,EAAAD,EAAA,yBAAAU,EAAA,OAAAZ,EAAAG,EAAAD,EAAA,4BAAAU,EAAA,UAAAZ,EAAAG,EAAAD,EAAA,+BAAAU,EAAA,iBAAAG,EAAAf,EAAA,IAAAA,EAAAG,EAAAD,EAAA,uCAAAa,EAAA,QAAAC,EAAAhB,EAAA,KAAAiB,EAAAjB,EAAAS,EAAAO,GAAAhB,EAAAG,EAAAD,EAAA,iCAAAe,EAAAH,IAAA,IAAAI,EAAAlB,EAAA,IAAAA,EAAAG,EAAAD,EAAA,8BAAAgB,EAAA,IAaA,IAAMb,EAAqBc,IAAMC,cAAc,IAEzCd,EAAc,SAAAe,GAAK,OACvBb,EAAAM,EAAAQ,cAACjB,EAAmBkB,SAApB,KACG,SAAAC,GACC,OACEH,EAAMI,MACLD,EAAgBH,EAAMK,QAAUF,EAAgBH,EAAMK,OAAOD,MAEtDJ,EAAMM,QAAUN,EAAMO,UAC5BP,EAAMI,KAAOJ,EAAMI,KAAKA,KAAOD,EAAgBH,EAAMK,OAAOD,MAGvDjB,EAAAM,EAAAQ,cAAA,uCAaf,SAASlB,IACP,MAAM,IAAIyB,MACR,gVATJvB,EAAYwB,UAAY,CACtBL,KAAMM,IAAUC,OAChBN,MAAOK,IAAUE,OAAOC,WACxBP,OAAQI,IAAUI,KAClBP,SAAUG,IAAUI,sJCEPC,cAJS,SAACC,GAAD,MAAwB,CAC9CC,QAASD,EAAME,mBAGFH,CAvBY,SAAAI,GAA0D,IAAvDC,EAAuDD,EAAvDC,MAAOC,EAAgDF,EAAhDE,SAAUC,EAAsCH,EAAtCG,KAAML,EAAgCE,EAAhCF,QAC7CM,EAAW,SAACC,GAAD,OAAqBA,EAAKC,MAASJ,IAAaG,EAAKE,KAAOL,EAASM,WAAWH,EAAKE,OAChGE,EAAaR,EAAMS,KAAK,SAACL,GAAD,OAAoBD,EAASC,MAAU,GACrE,OACEM,EAAA,cAACC,EAAA,EAAD,CAASC,GAAIC,IAAMC,UAAU,cAAcC,MAAM,OAC/ClB,QAASA,EAASmB,KAAK,UAAUC,UAAQ,EAACC,SAAUV,EAAWU,UAC9DlB,EAAMmB,IAAI,SAACf,GACV,IAAMgB,EAASjB,EAASC,GACxB,OACEM,EAAA,cAACG,EAAA,EAAKQ,KAAN,CAAWT,GAAIV,EAAMoB,GAAIlB,EAAKE,KAAMc,OAAQA,EAAQG,IAAKnB,EAAKE,MAC5DI,EAAA,cAACc,EAAA,EAAD,CAAMC,KAAMrB,EAAKY,OAChBZ,EAAKqB,oICdX,IAAMC,EAAY,CACvB,CAAED,KAAM,OAAQnB,KAAM,IAAKD,OAAO,EAAMW,KAAM,OAAQE,UAAU,GAChE,CAAEO,KAAM,QAASnB,KAAM,UAAWD,OAAO,EAAMW,KAAM,eACrD,CAAES,KAAM,OAAQnB,KAAM,SAAUD,OAAO,EAAOW,KAAM,cAUhDW,EAAS,SAAC/C,GAAuB,IAC7BqB,EAAarB,EAAMgD,SAAnB3B,SACF4B,EAAsB,MAAb5B,EAEf,OACES,EAAA,cAACoB,EAAA,EAAD,CAAUC,MAAOA,KACfrB,EAAA,cAACC,EAAA,EAAQqB,SAAT,CAAkBpB,GAAIqB,KAEpBvB,EAAA,cAACwB,EAAD,CAAahC,KAAMA,OAAMD,SAAUA,EAAUD,MAAO0B,EAAW7B,SAAS,IAExEa,EAAA,cAACC,EAAA,EAAQwB,OAAT,CAAgBC,MAAO,CAAEC,UAAW,UAEjCR,EAAS,KAAOnB,EAAA,cAAC4B,EAAA,EAAD,CACfpC,KAAMA,OACND,SAAUA,EACVD,MAAO0B,IAIThB,EAAA,qBAAK0B,MAAO,CAAEG,cAAe,KAC1B3D,EAAMO,UAITuB,EAAA,cAACuB,EAAA,EAAD,CAASf,UAAQ,EAACD,UAAQ,EAACuB,UAAU,UACnC9B,EAAA,cAAC+B,EAAA,EAAD,CAAWC,UAAU,UACnBhC,EAAA,mEAWDiC,EAAa,SAAmBC,GAAnB,gBAAAC,GAAA,SAAAC,IAAA,OAAAD,EAAAE,MAAAC,KAAAC,YAAAD,KAAA,OAAAE,IAAAJ,EAAAD,GAAAC,EAAAK,UAEtBjE,OAAA,WACE,OACEwB,EAAA,cAAC0C,EAAD,CAAQxB,SAAUoB,KAAKpE,MAAMgD,UAC3BlB,EAAA,cAACkC,EAAqBI,KAAKpE,SALXkE,EAAA,CACCpE,mCC/D3B,IAAsB2E,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,gHCkChC1D,kBAtBW,SAAAI,GAAA,IAAGC,EAAHD,EAAGC,MAAOC,EAAVF,EAAUE,SAAUC,EAApBH,EAAoBG,KAAMgB,EAA1BnB,EAA0BmB,SAAUwC,EAApC3D,EAAoC2D,SAApC,OACxBC,EAAA,cAACC,EAAA,EAAD,KACED,EAAA,cAACE,EAAA,EAAD,CAAMC,KAAK,QAAQC,UAAQ,EAACC,WAAS,EAAC9C,SAAUA,GAC9CyC,EAAA,cAACE,EAAA,EAAKxC,KAAN,CAAWT,GAAG,IAAI4B,UAAU,cAAcxB,KAAK,UAAUiD,QAAS,kBAAMP,GAAYA,EAASQ,kBAC7FP,EAAA,cAACE,EAAA,EAAKxC,KAAN,CAAWmB,UAAU,iBACnBmB,EAAA,cAACQ,EAAA,EAAD,CAAM1C,KAAK,MAAMqC,KAAK,SAGvB9D,EAAMmB,IAAI,SAACf,GACV,IAAMgB,EAAUhB,EAAKC,MAASJ,IAAaG,EAAKE,KAAOL,EAASM,WAAWH,EAAKE,MAChF,OAAOqD,EAAA,cAACE,EAAA,EAAKxC,KAAN,CACLT,GAAIV,EACJsC,UAAU,gBACVf,KAAMrB,EAAKqB,KACXH,GAAIlB,EAAKE,KACTiB,IAAKnB,EAAKE,KACVc,OAAQA,wICdL8C,EAAgB,iBAAO,CAAEE,KALR,mBAmBjBrC,EAAQsC,sBAXE,SAACzE,EAAmB0E,GACzC,OAAQA,EAAOF,MACb,IAV0B,iBAWxB,OAAOG,OAAOC,OAAO,GAAI5E,EAAO,CAAEE,kBAAmBF,EAAME,mBAC7D,QACE,OAAOF,IAK2B,CAAEE,kBAAkB,GAI1D2E,2BAAiB,uGCzBbC,EAAmB,SAAA3E,GAAkB,IAAf6B,EAAe7B,EAAf6B,SACpB+C,EAAgBC,UAAOC,4BAA4BjD,EAAS3B,UAClE,OAAOvB,IAAMG,cAAciG,IAApBP,OAAAC,OAAA,CACLjD,IAAKK,EAAS3B,SACd2B,WACA+C,iBACGA,EAAcI,QAIrBL,EAAiBrF,UAAY,CAC3BuC,SAAUtC,IAAU0F,MAAM,CACxB/E,SAAUX,IAAUE,OAAOC,aAC1BA,YAGUiF","file":"1-d429cd852c10591b8ca0.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport { waitForRouteChange } from \"./wait-for-route-change\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  waitForRouteChange,\n}\n","import * as React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Dispatch } from \"redux\";\r\nimport { GatsbyLinkProps } from \"gatsby-link\";\r\nimport { StoreState } from \"../../store\";\r\nimport { MenuProps, MenuItem } from \"../Menu\";\r\nimport { Menu, Icon, Sidebar } from \"semantic-ui-react\";\r\nimport { SemanticICONS } from \"semantic-ui-react\";\r\n\r\ninterface SidebarMenuProps extends MenuProps {\r\n  visible?: boolean;\r\n  dispatch?: Dispatch<any>;\r\n  Link: React.ComponentClass<GatsbyLinkProps<any>>;\r\n}\r\n\r\nexport const SidebarMenu = ({ items, pathname, Link, visible }: SidebarMenuProps) => {\r\n  const isActive = (item: MenuItem) => (item.exact) ? pathname === item.path : pathname.startsWith(item.path);\r\n  const activeItem = items.find((item: MenuItem) => isActive(item)) || {} as MenuItem;\r\n  return (\r\n    <Sidebar as={Menu} animation=\"slide along\" width=\"thin\"\r\n      visible={visible} icon=\"labeled\" vertical inverted={activeItem.inverted}>\r\n      {items.map((item) => {\r\n        const active = isActive(item);\r\n        return (\r\n          <Menu.Item as={Link} to={item.path} active={active} key={item.path}>\r\n            <Icon name={item.icon as SemanticICONS} />\r\n            {item.name}\r\n          </Menu.Item>\r\n        );\r\n      })}\r\n    </Sidebar>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: StoreState) => ({\r\n  visible: state.isSidebarVisible,\r\n});\r\n\r\nexport default connect<any, void, SidebarMenuProps>(mapStateToProps)(SidebarMenu);\r\n","import { Link } from \"gatsby\";\r\nimport * as React from \"react\";\r\nimport HeaderMenu from \"./HeaderMenu/HeaderMenu\";\r\nimport SidebarMenu from \"./SidebarMenu/SidebarMenu\";\r\nimport { Segment, Icon, Container, Sidebar } from \"semantic-ui-react\";\r\nimport \"../css/styles.css\";\r\nimport \"../css/responsive.css\";\r\nimport \"../css/semantic.min.css\";\r\nimport \"prismjs/themes/prism-okaidia.css\";\r\nimport { Provider } from \"react-redux\";\r\nimport { store } from \"../store\";\r\n\r\nexport const menuItems = [\r\n  { name: \"Home\", path: \"/\", exact: true, icon: \"home\", inverted: true },\r\n  { name: \"About\", path: \"/about/\", exact: true, icon: \"info circle\" },\r\n  { name: \"Blog\", path: \"/blog/\", exact: false, icon: \"newspaper\" },\r\n];\r\n\r\nexport interface LayoutProps {\r\n  location: {\r\n    pathname: string;\r\n  };\r\n  children: any;\r\n}\r\n\r\nconst Layout = (props: LayoutProps) => {\r\n  const { pathname } = props.location;\r\n  const isHome = pathname === \"/\";\r\n\r\n  return (\r\n    <Provider store={store}>\r\n      <Sidebar.Pushable as={Segment}>\r\n\r\n        <SidebarMenu Link={Link} pathname={pathname} items={menuItems} visible={false} />\r\n\r\n        <Sidebar.Pusher style={{ minHeight: \"100vh\" }}>\r\n          {/* Header */}\r\n          {isHome ? null : <HeaderMenu\r\n            Link={Link}\r\n            pathname={pathname}\r\n            items={menuItems}\r\n          />}\r\n\r\n          {/* Render children pages */}\r\n          <div style={{ paddingBottom: 60 }}>\r\n            {props.children}\r\n          </div>\r\n\r\n          {/* Footer */}\r\n          <Segment inverted vertical className=\"footer\">\r\n            <Container textAlign=\"center\">\r\n              <p>Copyright © 2019 Sharp Loris Games</p>\r\n            </Container>\r\n          </Segment>\r\n        </Sidebar.Pusher>\r\n      </Sidebar.Pushable>\r\n    </Provider>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n\r\nexport const withLayout = <P extends object>(WrappedComponent: React.ComponentType<P>) =>\r\n  class WithLayout extends React.Component<P & LayoutProps> {\r\n    render() {\r\n      return (\r\n        <Layout location={this.props.location}>\r\n          <WrappedComponent {...this.props} />\r\n        </Layout>\r\n      );\r\n    }\r\n  };\r\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import * as React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Dispatch } from \"redux\";\r\nimport { toggleSidebar } from \"../../store\";\r\nimport { Container, Label, Menu, Icon } from \"semantic-ui-react\";\r\nimport { MenuProps } from \"../Menu\";\r\n\r\ninterface HeaderMenuProps extends MenuProps {\r\n  dispatch?: Dispatch<any>;\r\n  inverted?: boolean;\r\n}\r\n\r\nexport const HeaderMenu = ({ items, pathname, Link, inverted, dispatch }: HeaderMenuProps) =>\r\n  <Container>\r\n    <Menu size=\"large\" pointing secondary inverted={inverted}>\r\n      <Menu.Item as=\"a\" className=\"mobile only\" icon=\"sidebar\" onClick={() => dispatch && dispatch(toggleSidebar())} />\r\n      <Menu.Item className=\"mobile hidden\">\r\n        <Icon name=\"spy\" size=\"big\" />\r\n        {/* <img className=\"ui medium circular image\"  src=\"/static/LorisLogo.png\"/> */}\r\n      </Menu.Item>\r\n      {items.map((item) => {\r\n        const active = (item.exact) ? pathname === item.path : pathname.startsWith(item.path);\r\n        return <Menu.Item\r\n          as={Link}\r\n          className=\"mobile hidden\"\r\n          name={item.name}\r\n          to={item.path}\r\n          key={item.path}\r\n          active={active}\r\n        />;\r\n      })}\r\n    </Menu>\r\n  </Container>;\r\n\r\nexport default connect()(HeaderMenu);\r\n","import { createStore } from \"redux\";\r\nimport { devToolsEnhancer } from \"redux-devtools-extension\";\r\nimport { get } from \"lodash\";\r\n\r\nexport interface StoreState {\r\n  isSidebarVisible: boolean;\r\n}\r\n\r\n// Actions\r\nexport const TOGGLE_SIDEBAR = \"TOGGLE_SIDEBAR\";\r\nexport type TOGGLE_SIDEBAR = typeof TOGGLE_SIDEBAR;\r\nexport interface ToggleSidebar {\r\n  type: TOGGLE_SIDEBAR;\r\n}\r\nexport const toggleSidebar = () => ({ type: TOGGLE_SIDEBAR });\r\n\r\n// Reducer\r\nexport const reducer = (state: StoreState, action: ToggleSidebar): StoreState => {\r\n  switch (action.type) {\r\n    case TOGGLE_SIDEBAR:\r\n      return Object.assign({}, state, { isSidebarVisible: !state.isSidebarVisible });\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// Store\r\nexport const initialState: StoreState = { isSidebarVisible: false };\r\nexport const store = createStore<StoreState>(\r\n  reducer,\r\n  initialState,\r\n  devToolsEnhancer({}),\r\n);\r\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    key: location.pathname,\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}