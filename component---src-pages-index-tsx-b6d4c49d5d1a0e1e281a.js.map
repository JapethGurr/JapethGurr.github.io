{"version":3,"sources":["webpack:///./src/pages/index.tsx","webpack:///./node_modules/@babel/runtime/helpers/toConsumableArray.js","webpack:///./node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","webpack:///./node_modules/@babel/runtime/helpers/iterableToArray.js","webpack:///./node_modules/@babel/runtime/helpers/nonIterableSpread.js","webpack:///./node_modules/semantic-ui-react/dist/es/collections/Grid/GridColumn.js","webpack:///./node_modules/semantic-ui-react/dist/es/collections/Grid/GridRow.js","webpack:///./node_modules/semantic-ui-react/dist/es/collections/Grid/Grid.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","gatsby__WEBPACK_IMPORTED_MODULE_1__","_components_HeaderMenu_HeaderMenu__WEBPACK_IMPORTED_MODULE_2__","_components_Layout__WEBPACK_IMPORTED_MODULE_3__","semantic_ui_react__WEBPACK_IMPORTED_MODULE_4__","semantic_ui_react__WEBPACK_IMPORTED_MODULE_5__","semantic_ui_react__WEBPACK_IMPORTED_MODULE_6__","semantic_ui_react__WEBPACK_IMPORTED_MODULE_7__","semantic_ui_react__WEBPACK_IMPORTED_MODULE_8__","withLayout","props","vertical","inverted","textAlign","className","Link","pathname","location","items","menuItems","text","as","stackable","verticalAlign","Row","Column","width","floated","columns","divided","relaxed","icon","name","arrayWithoutHoles","iterableToArray","nonIterableSpread","module","exports","arr","Array","isArray","i","arr2","length","iter","Symbol","iterator","Object","prototype","toString","call","from","TypeError","GridColumn","children","computer","color","largeScreen","mobile","only","stretched","tablet","widescreen","classes","classnames_default","classNameBuilders","rest","getUnhandledProps","ElementType","getElementType","react_default","a","createElement","extends_default","handledProps","propTypes","create","factories","Grid_GridColumn","GridRow","centered","reversed","Grid_GridRow","Grid","celled","container","doubling","padded"],"mappings":"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","file":"component---src-pages-index-tsx-b6d4c49d5d1a0e1e281a.js","sourcesContent":["import * as React from \"react\";\r\nimport { Link } from \"gatsby\";\r\nimport HeaderMenu from \"../components/HeaderMenu/HeaderMenu\";\r\nimport { withLayout, LayoutProps, menuItems } from \"../components/Layout\";\r\nimport {\r\n  Button,\r\n  Segment,\r\n  Container,\r\n  Grid,\r\n  Header,\r\n  Icon,\r\n} from \"semantic-ui-react\";\r\n\r\nconst IndexPage = (props: LayoutProps) =>\r\n  <div>\r\n    {/* Master head */}\r\n    <Segment vertical inverted textAlign=\"center\" className=\"masthead\">\r\n      <HeaderMenu\r\n        Link={Link} pathname={props.location.pathname} items={menuItems} inverted\r\n      />\r\n      <Container text>\r\n        <Header inverted as=\"h1\">Sharp Loris Games</Header>\r\n        {/* <Header inverted as=\"h2\">Making games and taking names</Header> */}\r\n        {/* <Button primary size=\"huge\">Get started!</Button> */}\r\n      </Container>\r\n    </Segment>\r\n\r\n    {/* About this starter */}\r\n    <Segment vertical className=\"stripe\">\r\n      <Grid stackable verticalAlign=\"middle\" className=\"container\">\r\n        <Grid.Row>\r\n          <Grid.Column width=\"8\">\r\n            <Header>Lorem ipsum</Header>\r\n            <p>\r\n              Lorem ipsum dolor sit amet, consectetur adipisicing elit.\r\n                  Porro laudantium ad, quae, perspiciatis ipsa distinctio.\r\n                </p>\r\n            <Header>Dolor sit amet</Header>\r\n            <p>\r\n              Lorem ipsum dolor sit amet, consectetur adipisicing elit.\r\n                  Porro laudantium ad, quae, perspiciatis ipsa distinctio.\r\n                </p>\r\n          </Grid.Column>\r\n          <Grid.Column width=\"6\" floated=\"right\">\r\n            {/* TODO replace with a pretty GIF */}\r\n            <Header>Lorem ipsum</Header>\r\n            <p>\r\n              Lorem ipsum dolor sit amet, consectetur adipisicing elit.\r\n                  Porro laudantium ad, quae, perspiciatis ipsa distinctio.\r\n                </p>\r\n            <Header>Dolor sit amet</Header>\r\n            <p>\r\n              Lorem ipsum dolor sit amet, consectetur adipisicing elit.\r\n                  Porro laudantium ad, quae, perspiciatis ipsa distinctio.\r\n                </p>\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n      </Grid>\r\n    </Segment>\r\n\r\n    {/* Key features */}\r\n    <Segment vertical className=\"stripe alternate feature\">\r\n      <Grid columns=\"3\" textAlign=\"center\" divided relaxed stackable className=\"container\">\r\n        <Grid.Row>\r\n          <Grid.Column>\r\n            <Header icon>\r\n              <Icon name=\"gamepad\"></Icon>\r\n              Games\r\n            </Header>\r\n            <p>\r\n              Lorem ipsum dolor sit amet, consectetur adipisicing elit.\r\n                  Voluptas eaque at quae cupiditate aspernatur quibusdam!\r\n                  Distinctio quod non, harum dolorum earum molestias,\r\n                  beatae expedita aliquam dolorem asperiores nemo amet quaerat.\r\n                </p>\r\n          </Grid.Column>\r\n          <Grid.Column>\r\n            <Header icon>\r\n              <Icon name=\"cogs\"></Icon>\r\n              Utilities\r\n            </Header>\r\n            <p>\r\n              Lorem ipsum dolor sit amet, consectetur adipisicing elit.\r\n                  Voluptas eaque at quae cupiditate aspernatur quibusdam!\r\n                  Distinctio quod non, harum dolorum earum molestias,\r\n                  beatae expedita aliquam dolorem asperiores nemo amet quaerat.\r\n                </p>\r\n          </Grid.Column>\r\n          <Grid.Column>\r\n            <Header icon>\r\n              <Icon name=\"mobile\"></Icon>\r\n              Mobile Stuff\r\n            </Header>\r\n            <p>\r\n              Lorem ipsum dolor sit amet, consectetur adipisicing elit.\r\n                  Voluptas eaque at quae cupiditate aspernatur quibusdam!\r\n                  Distinctio quod non, harum dolorum earum molestias,\r\n                  beatae expedita aliquam dolorem asperiores nemo amet quaerat.\r\n                </p>\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n      </Grid>\r\n    </Segment>\r\n  </div>;\r\n\r\nexport default withLayout(IndexPage);\r\n","var arrayWithoutHoles = require(\"./arrayWithoutHoles\");\n\nvar iterableToArray = require(\"./iterableToArray\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;","function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}\n\nmodule.exports = _arrayWithoutHoles;","function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nmodule.exports = _nonIterableSpread;","import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { customPropTypes, createShorthandFactory, getElementType, getUnhandledProps, SUI, useKeyOnly, useMultipleProp, useTextAlignProp, useValueAndKey, useVerticalAlignProp, useWidthProp } from '../../lib';\n/**\n * A column sub-component for Grid.\n */\n\nfunction GridColumn(props) {\n  var children = props.children,\n      className = props.className,\n      computer = props.computer,\n      color = props.color,\n      floated = props.floated,\n      largeScreen = props.largeScreen,\n      mobile = props.mobile,\n      only = props.only,\n      stretched = props.stretched,\n      tablet = props.tablet,\n      textAlign = props.textAlign,\n      verticalAlign = props.verticalAlign,\n      widescreen = props.widescreen,\n      width = props.width;\n  var classes = cx(color, useKeyOnly(stretched, 'stretched'), useMultipleProp(only, 'only'), useTextAlignProp(textAlign), useValueAndKey(floated, 'floated'), useVerticalAlignProp(verticalAlign), useWidthProp(computer, 'wide computer'), useWidthProp(largeScreen, 'wide large screen'), useWidthProp(mobile, 'wide mobile'), useWidthProp(tablet, 'wide tablet'), useWidthProp(widescreen, 'wide widescreen'), useWidthProp(width, 'wide'), 'column', className);\n  var rest = getUnhandledProps(GridColumn, props);\n  var ElementType = getElementType(GridColumn, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), children);\n}\n\nGridColumn.handledProps = [\"as\", \"children\", \"className\", \"color\", \"computer\", \"floated\", \"largeScreen\", \"mobile\", \"only\", \"stretched\", \"tablet\", \"textAlign\", \"verticalAlign\", \"widescreen\", \"width\"];\nGridColumn.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A grid column can be colored. */\n  color: PropTypes.oneOf(SUI.COLORS),\n\n  /** A column can specify a width for a computer. */\n  computer: PropTypes.oneOf(SUI.WIDTHS),\n\n  /** A column can sit flush against the left or right edge of a row. */\n  floated: PropTypes.oneOf(SUI.FLOATS),\n\n  /** A column can specify a width for a large screen device. */\n  largeScreen: PropTypes.oneOf(SUI.WIDTHS),\n\n  /** A column can specify a width for a mobile device. */\n  mobile: PropTypes.oneOf(SUI.WIDTHS),\n\n  /** A column can appear only for a specific device, or screen sizes. */\n  only: customPropTypes.multipleProp(SUI.VISIBILITY),\n\n  /** A column can stretch its contents to take up the entire grid or row height. */\n  stretched: PropTypes.bool,\n\n  /** A column can specify a width for a tablet device. */\n  tablet: PropTypes.oneOf(SUI.WIDTHS),\n\n  /** A column can specify its text alignment. */\n  textAlign: PropTypes.oneOf(SUI.TEXT_ALIGNMENTS),\n\n  /** A column can specify its vertical alignment to have all its columns vertically centered. */\n  verticalAlign: PropTypes.oneOf(SUI.VERTICAL_ALIGNMENTS),\n\n  /** A column can specify a width for a wide screen device. */\n  widescreen: PropTypes.oneOf(SUI.WIDTHS),\n\n  /** Represents width of column. */\n  width: PropTypes.oneOf(SUI.WIDTHS)\n} : {};\nGridColumn.create = createShorthandFactory(GridColumn, function (children) {\n  return {\n    children: children\n  };\n});\nexport default GridColumn;","import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useMultipleProp, useTextAlignProp, useVerticalAlignProp, useWidthProp } from '../../lib';\n/**\n * A row sub-component for Grid.\n */\n\nfunction GridRow(props) {\n  var centered = props.centered,\n      children = props.children,\n      className = props.className,\n      color = props.color,\n      columns = props.columns,\n      divided = props.divided,\n      only = props.only,\n      reversed = props.reversed,\n      stretched = props.stretched,\n      textAlign = props.textAlign,\n      verticalAlign = props.verticalAlign;\n  var classes = cx(color, useKeyOnly(centered, 'centered'), useKeyOnly(divided, 'divided'), useKeyOnly(stretched, 'stretched'), useMultipleProp(only, 'only'), useMultipleProp(reversed, 'reversed'), useTextAlignProp(textAlign), useVerticalAlignProp(verticalAlign), useWidthProp(columns, 'column', true), 'row', className);\n  var rest = getUnhandledProps(GridRow, props);\n  var ElementType = getElementType(GridRow, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), children);\n}\n\nGridRow.handledProps = [\"as\", \"centered\", \"children\", \"className\", \"color\", \"columns\", \"divided\", \"only\", \"reversed\", \"stretched\", \"textAlign\", \"verticalAlign\"];\nGridRow.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** A row can have its columns centered. */\n  centered: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A grid row can be colored. */\n  color: PropTypes.oneOf(SUI.COLORS),\n\n  /** Represents column count per line in Row. */\n  columns: PropTypes.oneOf(_toConsumableArray(SUI.WIDTHS).concat(['equal'])),\n\n  /** A row can have dividers between its columns. */\n  divided: PropTypes.bool,\n\n  /** A row can appear only for a specific device, or screen sizes. */\n  only: customPropTypes.multipleProp(SUI.VISIBILITY),\n\n  /** A row can specify that its columns should reverse order at different device sizes. */\n  reversed: customPropTypes.multipleProp(['computer', 'computer vertically', 'mobile', 'mobile vertically', 'tablet', 'tablet vertically']),\n\n  /** A row can stretch its contents to take up the entire column height. */\n  stretched: PropTypes.bool,\n\n  /** A row can specify its text alignment. */\n  textAlign: PropTypes.oneOf(SUI.TEXT_ALIGNMENTS),\n\n  /** A row can specify its vertical alignment to have all its columns vertically centered. */\n  verticalAlign: PropTypes.oneOf(SUI.VERTICAL_ALIGNMENTS)\n} : {};\nexport default GridRow;","import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useKeyOrValueAndKey, useMultipleProp, useTextAlignProp, useVerticalAlignProp, useWidthProp } from '../../lib';\nimport GridColumn from './GridColumn';\nimport GridRow from './GridRow';\n/**\n * A grid is used to harmonize negative space in a layout.\n */\n\nfunction Grid(props) {\n  var celled = props.celled,\n      centered = props.centered,\n      children = props.children,\n      className = props.className,\n      columns = props.columns,\n      container = props.container,\n      divided = props.divided,\n      doubling = props.doubling,\n      inverted = props.inverted,\n      padded = props.padded,\n      relaxed = props.relaxed,\n      reversed = props.reversed,\n      stackable = props.stackable,\n      stretched = props.stretched,\n      textAlign = props.textAlign,\n      verticalAlign = props.verticalAlign;\n  var classes = cx('ui', useKeyOnly(centered, 'centered'), useKeyOnly(container, 'container'), useKeyOnly(doubling, 'doubling'), useKeyOnly(inverted, 'inverted'), useKeyOnly(stackable, 'stackable'), useKeyOnly(stretched, 'stretched'), useKeyOrValueAndKey(celled, 'celled'), useKeyOrValueAndKey(divided, 'divided'), useKeyOrValueAndKey(padded, 'padded'), useKeyOrValueAndKey(relaxed, 'relaxed'), useMultipleProp(reversed, 'reversed'), useTextAlignProp(textAlign), useVerticalAlignProp(verticalAlign), useWidthProp(columns, 'column', true), 'grid', className);\n  var rest = getUnhandledProps(Grid, props);\n  var ElementType = getElementType(Grid, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), children);\n}\n\nGrid.handledProps = [\"as\", \"celled\", \"centered\", \"children\", \"className\", \"columns\", \"container\", \"divided\", \"doubling\", \"inverted\", \"padded\", \"relaxed\", \"reversed\", \"stackable\", \"stretched\", \"textAlign\", \"verticalAlign\"];\nGrid.Column = GridColumn;\nGrid.Row = GridRow;\nGrid.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** A grid can have rows divided into cells. */\n  celled: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['internally'])]),\n\n  /** A grid can have its columns centered. */\n  centered: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Represents column count per row in Grid. */\n  columns: PropTypes.oneOf(_toConsumableArray(SUI.WIDTHS).concat(['equal'])),\n\n  /** A grid can be combined with a container to use the available layout and alignment. */\n  container: PropTypes.bool,\n\n  /** A grid can have dividers between its columns. */\n  divided: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['vertically'])]),\n\n  /** A grid can double its column width on tablet and mobile sizes. */\n  doubling: PropTypes.bool,\n\n  /** A grid's colors can be inverted. */\n  inverted: PropTypes.bool,\n\n  /** A grid can preserve its vertical and horizontal gutters on first and last columns. */\n  padded: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['horizontally', 'vertically'])]),\n\n  /** A grid can increase its gutters to allow for more negative space. */\n  relaxed: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['very'])]),\n\n  /** A grid can specify that its columns should reverse order at different device sizes. */\n  reversed: customPropTypes.multipleProp(['computer', 'computer vertically', 'mobile', 'mobile vertically', 'tablet', 'tablet vertically']),\n\n  /** A grid can have its columns stack on-top of each other after reaching mobile breakpoints. */\n  stackable: PropTypes.bool,\n\n  /** A grid can stretch its contents to take up the entire grid height. */\n  stretched: PropTypes.bool,\n\n  /** A grid can specify its text alignment. */\n  textAlign: PropTypes.oneOf(SUI.TEXT_ALIGNMENTS),\n\n  /** A grid can specify its vertical alignment to have all its columns vertically centered. */\n  verticalAlign: PropTypes.oneOf(SUI.VERTICAL_ALIGNMENTS)\n} : {};\nexport default Grid;"],"sourceRoot":""}